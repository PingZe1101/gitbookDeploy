{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 依赖安装 gitbook install 启动项目 gitbook serve 构建项目 gitbook build "},"doc/HTML/HTML.html":{"url":"doc/HTML/HTML.html","title":"HTML","keywords":"","body":""},"doc/CSS/CSS.html":{"url":"doc/CSS/CSS.html","title":"CSS","keywords":"","body":"CSS.md "},"doc/JavaScript/JavaScript.html":{"url":"doc/JavaScript/JavaScript.html","title":"JavaScript","keywords":"","body":"JavaScript.md "},"doc/JavaScript/DOM.html":{"url":"doc/JavaScript/DOM.html","title":"DOM","keywords":"","body":"event事件对象 event.target 和 event.currentTarget的区别 event.currentTarget 会返回当前触发事件元素，event.target会返回触发事件的源头元素 event.currentTarget 在控制台展开查看的时候已经不存在了。如果想拿到它，可以使用变量进行缓存，然后再进行操作 1 2 3 document.querySelector('.ok').addEventListener('click', function (event) { console.log('event', event); // 展开后发现 event.currentTarget 值为null console.log('event.currentTarget', event.currentTarget); // 值正常 }); "},"doc/Chrome/Chrome.html":{"url":"doc/Chrome/Chrome.html","title":"Chrome","keywords":"","body":"Chrome.md "},"doc/Chrome/skills.html":{"url":"doc/Chrome/skills.html","title":"使用技巧","keywords":"","body":"Chrome 浏览器 Dev 94 开发者工具现已支持中文 Chrome 浏览器 Dev 94.0.4603.0 开发人员工具现已支持中文 具体设置方法 打开Chrome开发者工具 点击右上角“⚙️”图标进入到设置页面 左侧侧边栏选中“Preferences” 右侧main区域 “Appearance”大项 下的 “Language”小项，选择“Chinese - 中文”即可 "},"doc/DevTools/DevTools.html":{"url":"doc/DevTools/DevTools.html","title":"DevTools","keywords":"","body":"DevTools.md 给mac添加右键菜单“Open With VSCode” command + n 打开 “自动操作” 应用程序 选择快速操作 在左侧面板选择“实用工具”；然后找到”运行 Shell 脚本“后双击，在右侧“服务”收到选定选择文件夹，位置 “Finder（访达）.app”；“运行 Shell 脚本”的面板里，Shell选择 “/bin/bash“，传递输入选择 “作为自变量”，然后修改 Shell 脚本，如图 按顺序操作，复制以下内容到 Shell 脚本中for f in \"$@\" do open -a \"Visual Studio Code\" \"$f\" done Command + s 保存为 「Open With VSCode」 小插曲：保存时报Operation not permitted，查资料后得知与Mac OS升级有关，解决方案如下 左上角点击选择‘系统偏好设置’ 选择“安全性与隐私” 选择 隐私-->“完全磁盘访问权限” 点击左下角按钮获得管理员操作权限 把出问题的应用程序加到““完全磁盘访问权限””列表中 好了，现在试试在 Finder 里右键一个文件，就可以直接看到「Open With VSCode」菜单，右键一个文件夹，就可以看到「服务」-「Open With VSCode」菜单了 本地启动服务打开页面 http-server npm install http-server -g 在目标目录打开命令行 执行 \"http-server -p 自定义端口号\" npm源管理器 && node版本管理 npm源管理器：nrm 安装:sudo npm install -g nrm 查看是否安装成功:nrm --version❯ nrm --version 1.2.3 列出可选择的源:nrm ls 前面带 * 号的表示正在使用的源 ❯ nrm ls npm ---------- https://registry.npmjs.org/ yarn --------- https://registry.yarnpkg.com/ *tencent ------ https://mirrors.cloud.tencent.com/npm/ cnpm --------- https://r.cnpmjs.org/ taobao ------- https://registry.nlark.com/ npmMirror ---- https://skimdb.npmjs.com/registry/ 切换使用的源:nrm use npm❯ nrm use cnpm Registry has been set to: https://r.cnpmjs.org/ 删除一个源:nrm del \\ ❯ nrm del xdf delete registry xdf success 添加一个源:nrm add \\ \\ ❯ nrm add xdf http://npm.koolearn.com/ add registry xdf success 测试源速度:nrm test 测试一个源的响应时间：nrm test \\ ❯ nrm test npm npm ------ 1612ms 测试所有源的速度：nrm test ❯ nrm test npm ------ 1317ms yarn ----- 866ms tencent -- 316ms * cnpm ----- 572ms taobao --- 404ms npmMirror - 3440ms xdf ------ 957ms 访问源的主页：nrm home \\ node版本管理工具n 安装：sudo npm install -g n 查看是否安装成功:n --version❯ n --version v7.4.1 安装或使用一个node版本：sudo n node-version, 如果本地已存在这个node-version，则切换到这个node-version; 如果本地不存在这个node-version，则下载安装并切换❯ sudo n 8.12.0 installing : node-v8.12.0 mkdir : /usr/local/n/versions/node/8.12.0 fetch : https://nodejs.org/dist/v8.12.0/node-v8.12.0-darwin-x64.tar.xz installed : v8.12.0 (with npm 6.4.1 查看所有已经安装的node版本：n 使用或安装稳定的官方发布：sudo n stable❯ sudo n stable installing : node-v14.18.1 mkdir : /usr/local/n/versions/node/14.18.1 fetch : https://nodejs.org/dist/v14.18.1/node-v14.18.1-darwin-x64.tar.xz installed : v14.18.1 (with npm 6.14.15) 删除一个node版本：n rm node-version iTerm2配置 iTerm2 + oh-my-zsh + powerlevel10k 安装oh-my-zsh curl: export REMOTE=https://gitee.com/imirror/ohmyzsh.git sh -c \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ohmyzsh/ohmyzsh/tools/install.sh)\" vim ~/.zshrc ZSH_THEME=\"agnoster\" vim简单使用 修改： i 保存并关闭： esc --> :wq 切换agnoster主题后会出现乱码，需要安装额外的字体 Meslo for Powerline，安装好后在 Preferences->Profiles->Text->Font中进行配置 和\"agnoster\"平级的，也可以安装powerlevel10k/powerlevel10k主题 手动克隆主题相关git仓库git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ~/powerlevel10k echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc Set ZSH_THEME=\"powerlevel10k/powerlevel10k\" in ~/.zshrc 注意 2 3 4步操作后 需重启iTerm.app 方能看到效果 将iterm2配置成 Visual Studio Code 的默认终端 打开iterm2窗口，点击左上角菜单 iTerm2 --> Make iTerm2 Default Term 即可 注意：在vscode中使用配置了主题的 iTerm2，字体显示可能会不正常，解决方案： 打开iTerm2按住“command + ,”打开Preferences，在 Profiles --> Text --> Font 中查看当前使用的字体 打开vscode按住“shift + command + p”打开“命令面板”，检索“setting.json”，选择“Preferences： Open Setting（JSON）”，在JSON文件中追加字体配置，将下面代码中的“Meslo LG S for Powerline”替换成你iTerm2使用的字体 即可\"editor.fontFamily\": \"Meslo LG S for Powerline\", \"terminal.integrated.fontFamily\": \"Meslo LG S for Powerline\" 变量定义 "}}